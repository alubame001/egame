// Copyright 2013 wetalk authors
//
// Licensed under the Apache License, Version 2.0 (the "License"): you may
// not use this file except in compliance with the License. You may obtain
// a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.

package auth

import (
	//"fmt"
	"github.com/astaxie/beego"

	"github.com/alubame001/egame2015/modules/auth"
	"github.com/alubame001/egame2015/routers/base"
)

// SettingsRouter serves user settings.
type SettingsRouter struct {
	base.BaseRouter
}

// Profile implemented user profile settings page.
func (this *SettingsRouter) Profile() {
	beego.Trace("Profile Get")
	this.TplNames = "settings/profile.html"
	//beego.Trace("Profile2")
	this.Data["Profile"] = true
	this.Data["ResetPassword"] = false
	//var section = this.Ctx.Input.Param(":section")
	//Section := this.GetString("section")
	/*
		Section := this.Ctx.Input.Param(":section")

		if Section != "" {

			this.Data["Section"] = Section
		} else {
			//this.TplNames = "settings/profile.html"
			//this.Data["Section"] = ""
		}
	*/
	// need login
	if this.CheckLoginRedirect() {
		return
	}

	form := auth.ProfileForm{Locale: this.Locale}
	form.SetFromUser(&this.User)
	this.SetFormSets(&form)

	formPwd := auth.PasswordForm{}
	this.SetFormSets(&formPwd)
}

func (this *SettingsRouter) ResetPassword() {
	this.Profile()
	this.Data["ResetPassword"] = true
	this.Data["Profile"] = false
}

// ProfileSave implemented save user profile.
func (this *SettingsRouter) ProfileSave() {
	beego.Trace("ProfileSave Start")
	this.TplNames = "settings/profile.html"

	if this.CheckLoginRedirect() {
		return
	}
	//beego.Trace("section:", this.GetString("section"))
	action := this.GetString("action")
	beego.Trace("action:", action)

	if this.IsAjax() {
		switch action {
		case "send-verify-email":
			if this.User.IsActiveEmail { /* modified by Ray*/
				this.Data["json"] = false
			} else {
				auth.SendActiveMail(this.Locale, &this.User)
				this.Data["json"] = true
			}

			this.ServeJson()
			return
		}
		return
	}

	profileForm := auth.ProfileForm{Locale: this.Locale}
	profileForm.SetFromUser(&this.User)

	this.Data["Form"] = profileForm
	//var sectionUrl = "/settings/profile"
	//beego.Trace("sectionUrl:", sectionUrl)
	//fmt.Print("save-profile")
	beego.Trace("Begin To Valid Form")
	if this.ValidFormSets(&profileForm) {
		beego.Trace("Form Valid Checked")
		if err := profileForm.SaveUserProfile(&this.User); err != nil {
			beego.Error("ProfileSave: save-profile", err)
		}

		//this.FlashRedirect("/settings/profile", 302, "ProfileSave")
		beego.Trace("FlashRedirect")
		this.FlashRedirect("/settings/profile", 302, "UpdateSuccess")
		return
	} else {

		beego.Trace("Form not Valid")
	}
	beego.Trace("FlashRedirect2")
	this.FlashRedirect("/settings/profile", 302, "UpdateSuccess")
	/*
		pwdForm := auth.PasswordForm{User: &this.User}
			switch action {
			case "save-profile":

			case "change-password":
				fmt.Print("change-password")
				if this.ValidFormSets(&pwdForm) {

					// verify success and save new password
					if err := auth.SaveNewPassword(&this.User, pwdForm.Password); err == nil {

						this.FlashRedirect("/settings/resetpassword", 302, "PasswordSave")
						return
					} else {
						beego.Error("ProfileSave: change-password", err)
					}
				}

			default:
				this.Redirect("/settings/profile", 302)
				return
			}

			if action != "save-profile" {
				this.SetFormSets(&profileForm)
			}
			if action != "change-password" {
				this.SetFormSets(&pwdForm)
			}
	*/
}
